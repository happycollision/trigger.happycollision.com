const g="modulepreload",h=function(s){return"/"+s},f={},p=function(l,c,u){let a=Promise.resolve();if(c&&c.length>0){document.getElementsByTagName("link");const o=document.querySelector("meta[property=csp-nonce]"),n=o?.nonce||o?.getAttribute("nonce");a=Promise.all(c.map(t=>{if(t=h(t),t in f)return;f[t]=!0;const i=t.endsWith(".css"),d=i?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${t}"]${d}`))return;const r=document.createElement("link");if(r.rel=i?"stylesheet":g,i||(r.as="script",r.crossOrigin=""),r.href=t,n&&r.setAttribute("nonce",n),document.head.appendChild(r),i)return new Promise((e,m)=>{r.addEventListener("load",e),r.addEventListener("error",()=>m(new Error(`Unable to preload CSS for ${t}`)))})}))}return a.then(()=>l()).catch(o=>{const n=new Event("vite:preloadError",{cancelable:!0});if(n.payload=o,window.dispatchEvent(n),!n.defaultPrevented)throw o})};function v(s={}){const{immediate:l=!1,onNeedRefresh:c,onOfflineReady:u,onRegistered:a,onRegisteredSW:o,onRegisterError:n}=s;let t,i;const d=async(e=!0)=>{await i};async function r(){if("serviceWorker"in navigator){if(t=await p(()=>import("./workbox-window.prod.es5.D5gOYdM7.js"),[]).then(({Workbox:e})=>new e("/sw.js",{scope:"/",type:"classic"})).catch(e=>{n?.(e)}),!t)return;t.addEventListener("activated",e=>{(e.isUpdate||e.isExternal)&&window.location.reload()}),t.addEventListener("installed",e=>{e.isUpdate||u?.()}),t.register({immediate:l}).then(e=>{o?o("/sw.js",e):a?.(e)}).catch(e=>{n?.(e)})}}return i=r(),d}v({immediate:!0,onRegisteredSW(s){console.log("SW registered: ",s)},onOfflineReady(){console.log("PWA application ready to work offline")}});
